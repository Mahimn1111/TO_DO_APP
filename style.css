/* Import Google Fonts - Poppins */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

/* Variables for colors */
:root {
    --primary-accent: #6DD5ED;
    --secondary-accent: #2193B0;
    --background-light: #F4F7FC;
    --card-background: #FFFFFF;
    --text-dark: #333333;
    --text-subtle: #666666;
    --success-color: #8DE0B6;
    --delete-color: #EF8354;
    --shadow-light: rgba(0, 0, 0, 0.08);
    --shadow-medium: rgba(0, 0, 0, 0.12);
}

/* Base HTML Font Size for REM Units */
html {
    font-size: 16px; /* Base font size. 1rem = 16px */
    /* If you prefer 1rem = 10px for easier calculation:
       font-size: 62.5%; */
}


/* Base Styles */
body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(to right, var(--primary-accent), var(--secondary-accent));
    color: var(--text-dark);
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    padding: 1.25rem; /* 20px / 16px = 1.25rem */
    box-sizing: border-box;
    overflow-x: hidden;
}

.container {
    background-color: var(--card-background);
    border-radius: 0.9375rem; /* 15px / 16px = 0.9375rem */
    box-shadow: 0 0.625rem 1.875rem var(--shadow-medium); /* 10px 30px */
    padding: 1.875rem 2.5rem; /* 30px 40px */
    width: 100%;
    max-width: 34.375rem; /* 550px / 16px = 34.375rem */
    text-align: center;
    box-sizing: border-box;
}

h1 {
    color: var(--secondary-accent);
    margin-bottom: 1.875rem; /* 30px */
    font-size: 2.2rem; /* Relative to html font-size */
    font-weight: 700;
    letter-spacing: -0.03125rem; /* -0.5px */
}

/* Input Section */
.input-section {
    display: flex;
    gap: 0.9375rem; /* 15px */
    margin-bottom: 1.875rem; /* 30px */
    flex-wrap: wrap;
    justify-content: center; /* For larger screens */
    width: 100%; /* Ensure it fills parent */
    /* This width: 100% and proper padding on .container should align it well */
}

.input-section input[type="text"] {
    flex-grow: 1;
    padding: 0.875rem 1.125rem; /* 14px 18px */
    border: 0.0625rem solid #ddd; /* 1px */
    border-radius: 0.625rem; /* 10px */
    font-size: 1rem;
    outline: none;
    transition: all 0.3s ease;
    box-shadow: inset 0 0.0625rem 0.1875rem var(--shadow-light); /* 1px 3px */
    box-sizing: border-box;
}

.input-section input[type="text"]::placeholder {
    color: var(--text-subtle);
}

.input-section input[type="text"]:focus {
    border-color: var(--primary-accent);
    box-shadow: 0 0 0 0.1875rem rgba(109, 213, 237, 0.2); /* 3px */
}

.input-section button {
    background-color: var(--primary-accent);
    color: white;
    border: none;
    border-radius: 0.625rem; /* 10px */
    padding: 0.875rem 1.25rem; /* 14px 20px */
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem; /* 8px */
    box-shadow: 0 0.25rem 0.625rem var(--shadow-light); /* 4px 10px */
    box-sizing: border-box;
}

.input-section button:hover {
    background-color: var(--secondary-accent);
    transform: translateY(-0.125rem); /* -2px */
    box-shadow: 0 0.375rem 0.9375rem var(--shadow-medium); /* 6px 15px */
}

.input-section button:active {
    transform: translateY(0);
    box-shadow: 0 0.125rem 0.3125rem var(--shadow-light); /* 2px 5px */
}

/* Task List */
.task-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

.task-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: var(--background-light);
    border-radius: 0.625rem; /* 10px */
    margin-bottom: 0.75rem; /* 12px */
    padding: 0.9375rem 1.25rem; /* 15px 20px */
    box-shadow: 0 0.125rem 0.5rem var(--shadow-light); /* 2px 8px */
    transition: all 0.3s ease;
}

.task-item:last-child {
    margin-bottom: 0;
}

.task-item.completed {
    background-color: var(--success-color);
    opacity: 0.8;
    box-shadow: 0 0.125rem 0.5rem rgba(141, 224, 182, 0.4); /* 2px 8px */
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: white;
}

.task-text {
    flex-grow: 1;
    text-align: left;
    font-size: 1.1rem;
    color: var(--text-dark);
    word-break: break-word;
}

.task-item.completed .task-actions button {
    color: white;
}

.task-actions {
    display: flex;
    gap: 0.5rem; /* 8px */
    margin-left: 0.9375rem; /* 15px */
}

.task-actions button {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
    padding: 0.5rem; /* 8px */
    border-radius: 0.3125rem; /* 5px */
    transition: all 0.3s ease;
    color: var(--text-subtle);
}

.complete-btn:hover {
    color: var(--success-color);
    background-color: rgba(141, 224, 182, 0.2);
}

.delete-btn:hover {
    color: var(--delete-color);
    background-color: rgba(239, 131, 84, 0.2);
}

/* Empty State */
.empty-state {
    padding: 1.875rem; /* 30px */
    background-color: var(--background-light);
    border-radius: 0.625rem; /* 10px */
    margin-top: 1.875rem; /* 30px */
    color: var(--text-subtle);
    font-style: italic;
    font-size: 1.1rem;
    box-shadow: inset 0 0.0625rem 0.3125rem var(--shadow-light); /* 1px 5px */
}

/* Responsive Design */
@media (max-width: 600px) {
    .container {
        /*
          On mobile, reduce horizontal padding, but let the vertical padding be slightly generous.
          This gives content breathing room from device edges.
        */
        padding: 1.5625rem 1rem; /* 25px top/bottom, 16px left/right */
        margin: 0.9375rem; /* 15px margin around the container */
    }

    h1 {
        font-size: 1.8rem;
        margin-bottom: 1.5625rem; /* 25px */
    }

    .input-section {
        flex-direction: column; /* Stack items vertically on mobile */
        gap: 0.625rem; /* 10px */
        width: 100%; /* Ensure the flex container takes full available width of its parent */
        /* By default, align-items: stretch will make children fill width when flex-direction is column. */
        /* If for some reason that doesn't work, adding align-items: stretch here can help. */
        align-items: stretch; /* Force children to stretch to fill horizontal space */
        margin-left: auto; /* Ensure centering by taking up all available space and letting auto margins work */
        margin-right: auto;
    }

    .input-section input[type="text"],
    .input-section button {
        width: 100%; /* Make both the input and button take 100% width of their parent (.input-section) */
        /* Box-sizing: border-box ensures padding/border are included in this 100% */
        /* No max-width or margin: auto needed here, as 100% fill is the goal */
    }

    .input-section button {
        justify-content: center; /* Ensures the text and icon inside the button are centered */
    }

    .task-item {
        flex-direction: column;
        align-items: flex-start;
        padding: 0.9375rem 0.9375rem; /* 15px top/bottom, 15px left/right */
        gap: 0.625rem; /* 10px */
    }

    .task-text {
        width: 100%;
        text-align: left;
    }

    .task-actions {
        width: 100%;
        justify-content: flex-end; /* Align actions to the right on small screens */
        margin-left: 0;
        margin-top: 0.3125rem; /* 5px */
    }
}

@media (max-width: 400px) {
    .container {
        padding: 1.25rem; /* 20px */
    }

    h1 {
        font-size: 1.6rem;
    }

    .task-item {
        padding: 0.75rem; /* 12px */
    }

    .task-actions button {
        font-size: 1.1rem;
        padding: 0.375rem; /* 6px */
    }
}